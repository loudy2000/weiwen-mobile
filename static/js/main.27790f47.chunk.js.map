{"version":3,"sources":["store/reducer.js","store/index.js","store/actionTypes.js","utils/index.js","api/config.js","api/fetch.js","pages/PostsPage.js","pages/MsgsPage.js","api/common.js","store/actionCreator.js","api/login.js","pages/MyPage.js","App.js","index.js","api/ipfsApi.js"],"names":["defaultState","logged","user","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","arguments","length","undefined","action","newState","JSON","parse","stringify","type","value","applyMiddleware","thunk","IconText","_ref","text","onClick","react_default","a","createElement","class","style","marginRight","network","blockchain","protocol","host","port","chainId","signatureProvider","JsSignatureProvider","url","rpc","JsonRpc","fetch","fetchAll","Api","textDecoder","TextDecoder","textEncoder","TextEncoder","Object","asyncToGenerator","regenerator_default","mark","_callee","table","options","res","wrap","_context","prev","next","get_table_rows","objectSpread","json","code","scope","limit","reverse","key_type","index_position","sent","abrupt","rows","stop","_x","_x2","apply","this","fetchOne","_ref2","_callee2","keyValue","_context2","lower_bound","upper_bound","_x3","_x4","PostsPage","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onRefresh","setState","refreshing","isLoading","data","rData","genOnePageData","dataSource","cloneWithRows","pageIndex","onEndReached","event","setTimeout","concat","toConsumableArray","list_view_default","DataSource","rowHasChanged","row1","row2","pIndex","dataOnePage","i","item","push","attachment","href","utils_IconText","ipfsApi","target","rel","src","alt","width","height","_this2","react","nav_bar_default","mode","rightContent","renderRow","rowData","sectionID","rowID","key","padding","card_default","full","Header","title","author","thumb","extra","fontSize","moment","time","valueOf","format","Body","white_space_default","size","className","content","attachtype","renderAttachment","flex_default","color","Item","parseFloat","balance","toFixed","like_num","console","log","id","comment_num","renderSeparator","backgroundColor","borderTop","borderBottom","renderFooter","textAlign","document","documentElement","clientHeight","pullToRefresh","pull_to_refresh_default","pageSize","Component","MsgsPage","checkConnected","ScatterJS","scatter","connect","initTimeout","msg","toast_default","info","changeLoginStatus","changeUserInfo","getUserInfo","dispatch","login","identity","account","accounts","actionCreator","name","t0","error","logout","checkLogin","_ref3","_callee3","_context3","MyPage","_this$props","button_default","App","selectedTab","createTabItem","icon","selectedIcon","page","badge","tab_bar_default","selected","onPress","unselectedTintColor","tintColor","barTintColor","pages_PostsPage","pages_MsgsPage","pages_MyPage","ReactDOM","render","es","src_App_0","getElementById","Buffer","__webpack_require__","d","__webpack_exports__","ipfsUrl","ipfs_api__WEBPACK_IMPORTED_MODULE_0__","ipfs_api__WEBPACK_IMPORTED_MODULE_0___default","n","IpfsAPI","hash"],"mappings":"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","file":"static/js/main.27790f47.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\n\nconst defaultState = {\n  logged: {},\n  user: {},\n}\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state));\n  switch(action.type){\n    case actionTypes.CHANGE_LOGIN_STATUS:  \n      newState.logged = action.value;\n      break;\n    case actionTypes.CHANGE_USER_INFO:\n      newState.user = action.value;\n      break;\n    default:\n      break;     \n  }\n  return newState;\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nexport default store;","export const CHANGE_LOGIN_STATUS = 'CHANGE_LOGIN_STATUS';\nexport const CHANGE_USER_INFO = 'CHANGE_USER_INFO';","import React from 'react';\nimport { Toast } from 'antd-mobile';\n\nexport const IconText = ({ type, text, onClick }) => (\n  <span onClick={onClick}>\n    <i class={'iconfont ' + type} style={{ marginRight: 8 }}></i>\n    {text}\n  </span>\n);\n\nexport const toast = (msg) => {\n  Toast.info(msg, 1);\n}","import { Api, JsonRpc } from 'eosjs'\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig'; \n\nconst appName = '微文';\nconst contract = 'weiwendapps2';\n\nconst network = {\n  blockchain: 'eos',\n  protocol: 'https',\n  host: 'api.jungle.alohaeos.com',\n  port: 443,\n  chainId: 'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473',\n};\n\nconst signatureProvider = new JsSignatureProvider(['5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr']);\nconst url = network.protocol + '://' + network.host + ':' + network.port;\n\nconst rpc = new JsonRpc(url, { fetch })\nconst api = new Api({\n  rpc,\n  signatureProvider,\n  chainId: network.chainId,\n  textDecoder: new TextDecoder(),\n  textEncoder: new TextEncoder(),\n});\n\nexport { api, rpc, network, appName, contract }","import { rpc, contract } from './config'\n\nexport const fetchAll = async (table, options) => {\n  const res = await rpc.get_table_rows({\n    json: true,             \n    code: contract,     \n    scope: contract,      \n    table,        \n    limit: 9999,       \n    reverse: true, \n    key_type: 'i64',\n    index_position: 1,             \n    ...options,   \n  });\n  return res.rows;\n}\n\nexport const fetchOne = async (table, keyValue) => {\n  const res = await rpc.get_table_rows({\n    json: true,                \n    code: contract,          \n    scope: contract,           \n    table,          \n    lower_bound: keyValue, \n    upper_bound: keyValue,    \n    limit: 1,          \n  });\n  return res.rows[0];\n}\n","import React, { Component, Fragment } from 'react';\nimport { NavBar, ListView, Card, Flex, WhiteSpace, PullToRefresh } from 'antd-mobile';\nimport moment from 'moment';\n\nimport { IconText } from '../utils';\nimport * as ipfsApi from '../api/ipfsApi';\nimport { fetchAll } from '../api/fetch';\n\nconst ROWS_OF_PAGE = 10;  //每页数据条数\n\nclass PostsPage extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.pageIndex = 0;\n\n    const dataSource = new ListView.DataSource({\n      rowHasChanged: (row1, row2) => row1 !== row2,\n    });\n\n    this.state = {\n      data: [],\n      dataSource,\n      refreshing: true,\n      isLoading: true,\n    };\n  }\n\n  genOnePageData(pIndex = 0) {\n    const dataOnePage = [];\n    for (let i = 0; i < ROWS_OF_PAGE; i++) {\n      const item = this.state.data[pIndex * ROWS_OF_PAGE + i];\n      if(item !== undefined){\n        dataOnePage.push(item);\n      }\n    }\n    return dataOnePage;\n  }\n\n  async componentDidMount() {\n    const res = await fetchAll('posttable');\n    this.setState({data: res});\n\n    this.rData = this.genOnePageData();\n    this.setState({\n      dataSource: this.state.dataSource.cloneWithRows(this.rData),\n      refreshing: false,\n      isLoading: false,\n    });\n  }\n\n  onRefresh = async () => {\n    this.setState({ refreshing: true, isLoading: true });\n    const res = await fetchAll('posttable');\n    this.setState({data: res});\n\n    this.rData = this.genOnePageData();\n    this.setState({\n      dataSource: this.state.dataSource.cloneWithRows(this.rData),\n      refreshing: false,\n      isLoading: false,\n    });\n    this.pageIndex = 0;\n  };\n\n  onEndReached = (event) => {\n    if (this.state.isLoading) return;\n    this.setState({ isLoading: true });\n\n    setTimeout(() => {\n      this.rData = [...this.rData, ...this.genOnePageData(++this.pageIndex)];\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(this.rData),\n        isLoading: false,\n      });\n    }, 600);\n  };\n\n  renderAttachment(type, attachment){\n    if(type === 1){\n      return <a href={attachment}><IconText type='icon-link' text={attachment} /></a> \n    }else if(type === 2){\n      return <a href={ipfsApi.ipfsUrl(attachment)}><IconText type='icon-link' text={attachment} /></a> \n    }else if(type === 3){\n      return (\n        <a href={ipfsApi.ipfsUrl(attachment)} target='_blank' rel='noopener noreferrer'>\n          <img src={ipfsApi.ipfsUrl(attachment)} alt='' style={{width: 230, height: 100}}/>\n        </a>\n      )\n    }\n    return '';\n  }\n\n  render() {\n    const row = (rowData, sectionID, rowID) => {\n      const item = rowData;\n      return (\n        <div key={rowID} style={{ padding: '0 15px' }}>\n          <Card full>\n            <Card.Header\n              title={item.author}\n              thumb='https://gw.alipayobjects.com/zos/antfincdn/XAosXuNZyF/BiazfanxmamNRoxxVxka.png'\n              extra={<span style={{fontSize: '14px'}}>{moment(moment(item.time).valueOf()+8*3600000).format('YYYY-MM-DD HH:mm')}</span>}\n            />\n            <Card.Body>\n              <WhiteSpace size='xs'/>\n              <div className='item-content'>{item.content}</div>\n              <WhiteSpace size='lg'/>\n              {\n                item.attachtype ? \n                <div className='item-attach'>\n                  {this.renderAttachment(item.attachtype, item.attachment)}\n                </div> : ''\n              }\n              <WhiteSpace size='lg'/>\n              <Flex style={{color: 'rgba(0,0,0,.45)', fontSize: '14px'}}>\n                <Flex.Item><IconText type='icon-money' text={parseFloat(item.balance).toFixed(2)} /></Flex.Item>\n                <Flex.Item><IconText type='icon-dianzan' text={item.like_num} onClick={() => {console.log('like:'+item.id)}} /></Flex.Item>\n                <Flex.Item><IconText type='icon-comment' text={item.comment_num} onClick={() => {console.log('comment:'+item.id)}} /></Flex.Item>\n              </Flex>\n            </Card.Body>\n          </Card>\n        </div>\n      );\n    };\n    return (\n      <Fragment>\n        <NavBar mode='dark' rightContent='发布'>\n          微文\n        </NavBar>\n        <ListView\n          dataSource={this.state.dataSource}\n          renderRow={row}\n          renderSeparator={(sectionID, rowID) => (\n            <div \n              key={rowID}\n              style={{\n                backgroundColor: '#F5F5F9',\n                height: 8,\n                borderTop: '1px solid #ECECED',\n                borderBottom: '1px solid #ECECED',\n              }}\n            />\n          )}\n          renderFooter={() => (\n            <div style={{ padding: 10, textAlign: 'center' }}>\n              {this.state.isLoading ? '加载中...' : '加载完成'}\n            </div>\n          )}\n          style={{height: document.documentElement.clientHeight}}\n          pullToRefresh={<PullToRefresh\n            refreshing={this.state.refreshing}\n            onRefresh={this.onRefresh}\n          />}\n          onEndReached={this.onEndReached}\n          pageSize={5}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default PostsPage;","import React, { Component, Fragment } from 'react';\nimport { NavBar } from 'antd-mobile';\n\nclass MsgsPage extends Component {\n\n  render() {\n    return (\n      <Fragment>\n        <NavBar mode='dark'>消息</NavBar>\n        消息\n      </Fragment>\n    )\n  }\n}\n\nexport default MsgsPage;","import ScatterJS from 'scatterjs-core'\n\nimport { toast } from '../utils';\nimport { appName } from './config'\n\nexport const checkConnected = async () => {\n  const connected = await ScatterJS.scatter.connect(\n    appName,\n    { initTimeout: 5000 },\n  );\n  if (!connected) toast('没有检测到Scatter', '请安装Scatter或激活');\n}","import * as actionTypes from './actionTypes';\nimport { fetchOne } from '../api/fetch'; \n\nexport const changeLoginStatus = (value) => ({\n  type: actionTypes.CHANGE_LOGIN_STATUS,\n  value,\n})\n\nexport const changeUserInfo = (value) => ({\n  type: actionTypes.CHANGE_USER_INFO,\n  value,\n})\n\nexport const getUserInfo = (value) => (\n  async (dispatch) => {\n    const res = await fetchOne('usertable', value);\n    if(res){\n      dispatch(changeUserInfo(res));   \n    }\n  }\n)","import ScatterJS from 'scatterjs-core'\nimport { network } from './config'\nimport { checkConnected } from './common';\n\nimport * as actionCreator from '../store/actionCreator';\n\nexport const login = async (dispatch) => {\n  try {\n    await checkConnected();\n    const identity = await ScatterJS.scatter.login({accounts:[network]});\n    const account = identity.accounts[0];\n    if(account){\n      dispatch(actionCreator.changeLoginStatus(account));\n      dispatch(actionCreator.getUserInfo(account.name));\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport const logout = async (dispatch) => {\n  try {\n    await ScatterJS.scatter.logout();\n    dispatch(actionCreator.changeLoginStatus(false));\n    dispatch(actionCreator.changeUserInfo({}));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport const checkLogin = async (dispatch) => {\n  try {\n    await checkConnected();\n    const res = await ScatterJS.scatter.checkLogin();\n    if(res) dispatch(login);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n\n\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { NavBar, Button } from 'antd-mobile';\nimport { login, logout, checkLogin } from '../api/login';\n// import { toast } from '../utils';\n\n// const tp = require('tp-eosjs');\n\nclass MyPage extends Component {\n\n  componentDidMount(){\n    this.props.checkLogin();\n    // toast('isConnected: ' + tp.isConnected());\n  }\n\n  render() {\n    const { logged, login, logout } = this.props;\n    return (\n      <Fragment>\n        <NavBar mode='dark'>我的</NavBar>\n        <Button\n          onClick={logged.name ? logout: login }\n        >\n          {logged.name ? '注销' : '登录'}\n        </Button>\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    logged: state.logged,\n    user : state.user,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return { \n    login(){\n      dispatch(login);  \n    },\n    logout(){\n      dispatch(logout);  \n    },\n    checkLogin(){\n      dispatch(checkLogin);\n    }, \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPage);","import React, { Component } from 'react';\nimport './App.css';\n\nimport { TabBar } from 'antd-mobile';\nimport PostsPage from './pages/PostsPage';\nimport MsgsPage from './pages/MsgsPage';\nimport MyPage from './pages/MyPage';\n\nclass App extends Component {\n\n  state = { selectedTab: 'home'};  \n\n  createTabItem = (title, key, icon, selectedIcon, page, badge = false) => (\n    <TabBar.Item\n      title={title}\n      key={key}\n      icon={<i class={'iconfont ' + icon}></i>}\n      selectedIcon={<i class={'iconfont ' + selectedIcon}></i>}\n      selected={this.state.selectedTab === key}\n      onPress={() => {this.setState({selectedTab: key})}}\n      badge={badge}\n    >\n      <div style={{height: document.documentElement.clientHeight - 50}}>{page}</div>\n    </TabBar.Item>\n  )\n\n  render(){\n    return (\n      <TabBar\n        unselectedTintColor='#949494'\n        tintColor='#33A3F4'\n        barTintColor='white'\n      >\n        {this.createTabItem('首页', 'home', 'icon-home', 'icon-home1', <PostsPage />)}\n        {this.createTabItem('消息', 'msg', 'icon-xiaoxi-control', 'icon-xiaoxi-control1', <MsgsPage />, 1)}\n        {this.createTabItem('我的', 'my', 'icon-geren', 'icon-geren-copy', <MyPage />)}\n      </TabBar>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n","import IpfsAPI from 'ipfs-api';\nimport axios from 'axios';\n\nconst ipfs = IpfsAPI('ipfs.infura.io', '5001', {protocol: 'https'});\nconst ipfsPrefix = 'https://ipfs.io/ipfs/';\n\nconst pinataApiKey = '7f6281d069410fd3a2c7';\nconst pinataSecretApiKey = '5dd9ef467c830d553d8e47ab91d22d76aa5280f756e614625bcc79d5e5960258';\n\n/**\n * 保存文件到IPFS\n */\nexport const saveFileToIPFS = (file) => {\n  return new Promise((resolve, reject) => {\n    let reader = new FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => {\n      const buffer = Buffer.from(reader.result);\n      ipfs.add(buffer).then(res => {\n        resolve(res[0].hash);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  });\n};\n\n/**\n * 保存文本到IPFS\n */\nexport const saveTextToIPFS = (text) => {\n  return new Promise((resolve, reject) => {\n    const descBuf = Buffer.from(text, 'utf-8');\n    ipfs.add(descBuf).then(res => {\n      resolve(res[0].hash);\n    }).catch(error => {\n      console.log(error);\n    });\n  });\n};\n\n/**\n * 从IPFS读取文本\n */\nexport const readTextFromIPFS = (hash) => {\n  return new Promise((resolve, reject) => {\n    ipfs.cat(hash).then(res => {\n      let content = new TextDecoder('utf-8').decode(res);\n      resolve(content);\n    }).catch(error => {\n      console.log(error);\n    });\n  });\n};\n\n/**\n * 通过哈希值访问IPFS上的文件 \n */\nexport const ipfsUrl = (hash) => {\n  return ipfsPrefix + hash;\n};\n\n/**\n * 使用Infura固定服务\n */\nexport const pinByInfura = (hash) => {\n  axios.get('https://ipfs.infura.io:5001/api/v0/pin/add?arg=/ipfs/' + hash)\n  .then(res => {\n    console.log(res);\n  })\n  .catch(error => {\n    console.log(error);\n  });\n};\n\n/**\n * 使用Pinata固定服务\n */\nexport const pinByPinata = (hash) => {\n  axios.post('https://api.pinata.cloud/pinning/pinHashToIPFS',\n    { hashToPin: hash },\n    { headers: \n      {\n        'pinata_api_key': pinataApiKey,\n        'pinata_secret_api_key': pinataSecretApiKey,\n      }\n    }).then(res => {\n      console.log(res);    \n    }).catch(function (error) {\n      console.log(error);\n    });\n}\n"],"sourceRoot":""}